{"version":3,"sources":["stream/Context.ts","stream/Provider.tsx","stream/Renderer.ts","stream/shaders/vertex.glsl","stream/shaders/fragment.glsl","App.tsx","webrtc/socket.ts","Home.tsx","webrtc/index.ts","Room.tsx","reportWebVitals.ts","index.tsx"],"names":["createContext","Provider","stream","children","Context","value","Renderer","canvas","video","width","height","scene","renderer","clock","camera","material","this","document","createElement","autoplay","Scene","PerspectiveCamera","position","z","WebGLRenderer","antialias","alpha","Clock","render","bind","a","getUserMedia","media","audioTracks","getAudioTracks","srcObject","MediaStream","getVideoTracks","Promise","race","_","reject","setTimeout","Error","resolve","onloadeddata","geometry","PlaneGeometry","ShaderMaterial","vertexShader","fragmentShader","uniforms","uTime","uTexture","VideoTexture","side","DoubleSide","mesh","Mesh","add","requestAnimationFrame","captureStream","forEach","track","addTrack","navigator","mediaDevices","frameRate","audio","error","name","getElapsedTime","App","useState","setStream","useEffect","getStream","then","catch","console","className","log","process","socket","io","on","err","request","options","event","parameters","emit","Home","history","useHistory","useContext","useRef","current","host","useCallback","room","nanoid","push","onClick","autoPlay","muted","controls","ref","WebRTC","pc","handleTrackEvent","handleNegotiationNeededEvent","createOffer","offer","setLocalDescription","localDescription","handleICECandidateEvent","candidate","handleICEConnectionStateChangeEvent","state","iceConnectionState","close","handleSignalingStateChangeEvent","signalingState","handleCall","msg","createPeerConnection","setRemoteDescription","RTCSessionDescription","getTracks","createAnswer","answer","handleAnswer","handleCandidate","addIceCandidate","c","RTCPeerConnection","iceServers","urls","onnegotiationneeded","ontrack","onicecandidate","oniceconnectionstatechange","onsignalingstatechange","onremovetrack","onicegatheringstatechange","canShare","undefined","share","shareData","title","text","url","location","href","Room","params","useParams","remote","local","disconnect","removeAttribute","webrtc","streams","id","participants","length","call","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","exact","path","getElementById"],"mappings":"qOAEeA,0BAAkC,M,OCMpCC,EAA0C,SAAC,GAGjD,IAFLC,EAEI,EAFJA,OACAC,EACI,EADJA,SAEA,OAAO,cAACC,EAAQH,SAAT,CAAkBI,MAAOH,EAAzB,SAAkCC,K,6CCStBG,E,WAYnB,aAAe,yBAXPC,YAWM,OAVNC,WAUM,OATGC,MAPa,IAgBhB,KARGC,OAPc,IAejB,KAPNC,WAOM,OANNC,cAMM,OALNC,WAKM,OAJNX,YAIM,OAHNY,YAGM,OAFNC,cAEM,EACZC,KAAKR,MAAQS,SAASC,cAAc,SACpCF,KAAKR,MAAMW,UAAW,EAEtBH,KAAKT,OAASU,SAASC,cAAc,UACrCF,KAAKT,OAAOE,MAAQO,KAAKP,MACzBO,KAAKT,OAAOG,OAASM,KAAKN,OAE1BM,KAAKL,MAAQ,IAAIS,IAEjBJ,KAAKF,OAAS,IAAIO,IAAkB,GAAIL,KAAKP,MAAQO,KAAKN,OAAQ,GAAK,KACvEM,KAAKF,OAAOQ,SAASC,EAAI,EAEzBP,KAAKJ,SAAW,IAAIY,IAAc,CAChCjB,OAAQS,KAAKT,OACbkB,WAAW,EACXC,OAAO,IAGTV,KAAKH,MAAQ,IAAIc,IAEjBX,KAAKY,OAASZ,KAAKY,OAAOC,KAAKb,M,oFAGjC,yCAAAc,EAAA,sEACsBd,KAAKe,eAD3B,cACQC,EADR,OAGQC,EAAcD,EAAME,iBAE1BlB,KAAKR,MAAM2B,UAAY,IAAIC,YAAYJ,EAAMK,kBAL/C,SAOQC,QAAQC,KAAK,CACjB,IAAID,SAAQ,SAACE,EAAGC,GAAJ,OACVC,WAAWD,EAAQ,IAAM,IAAIE,MAAM,sCAErC,IAAIL,SAAQ,SAACM,GACX,EAAKpC,MAAMqC,aAAeD,OAZhC,cAgBQE,EAAW,IAAIC,IAAc,EAAG,IAAM,GAAI,IAChD/B,KAAKD,SAAW,IAAIiC,IAAe,CACjCC,aC3ES,quGD4ETC,eE5ES,2WF6ETC,SAAU,CACRC,MAAO,CAAE/C,MAAO,GAChBgD,SAAU,CAAEhD,MAAO,IAAIiD,IAAatC,KAAKR,SAE3C+C,KAAMC,MAEFC,EAAO,IAAIC,IAAKZ,EAAU9B,KAAKD,UACrCC,KAAKL,MAAMgD,IAAIF,GAEfG,sBAAsB5C,KAAKY,QAG3BZ,KAAKd,OAASc,KAAKT,OAAOsD,cAtEO,IAwEjC5B,EAAY6B,SAAQ,SAACC,GAEnB,EAAK7D,OAAO8D,SAASD,MApCzB,kBAwCS/C,KAAKd,QAxCd,iD,gFA2CA,WACE,GAAI+D,UAAUC,aACZ,OAAOD,UAAUC,aAAanC,aAAa,CACzCvB,MAAO,CACLC,MAvFsB,IAwFtBC,OAvFuB,IAwFvByD,UAvF2B,IAyF7BC,OAAO,IAIX,IAAMC,EAAQ,IAAI1B,MAChB,mEAGF,OADA0B,EAAMC,KAAO,iBACNhC,QAAQG,OAAO4B,K,oBAGxB,WACET,sBAAsB5C,KAAKY,QAE3BZ,KAAKD,SAASoC,SAASC,MAAM/C,MAAQW,KAAKH,MAAM0D,iBAChDvD,KAAKJ,SAASgB,OAAOZ,KAAKL,MAAOK,KAAKF,Y,KGvG3B0D,G,MAfO,SAAC,GAAkB,IAAhBrE,EAAe,EAAfA,SAAe,EACVsE,mBAA6B,MADnB,mBAC/BvE,EAD+B,KACvBwE,EADuB,KAQtC,OALAC,qBAAU,YACS,IAAIrE,GACZsE,YAAYC,KAAKH,GAAWI,MAAMC,QAAQV,SAClD,IAGD,cAAC,EAAD,CAAUnE,OAAQA,EAAlB,SACE,sBAAM8E,UAAU,MAAhB,SAAuB7E,Q,gCCb7B4E,QAAQE,IAAI,aAAcC,4CAC1B,IAAMC,EAASC,aAAGF,4CAElBC,EAAOE,GAAG,WAAW,kBAAMN,QAAQE,IAAI,cACvCE,EAAOE,GAAG,aAAa,kBAAMN,QAAQE,IAAI,gBACzCE,EAAOE,GAAG,cAAc,kBAAMN,QAAQE,IAAI,iBAC1CE,EAAOE,GAAG,iBAAiB,SAACC,GAAD,OAASP,QAAQE,IAAI,gBAAiBK,MAElDH,QAER,SAASI,EAAQC,GAMpB,IACMC,EAAyBD,EAAzBC,MAAUC,EADjB,YACgCF,EADhC,WAED,OAAO,IAAIlD,SAAQ,SAACM,GAClBuC,EAAOQ,KAAKF,EAAOC,EAAY9C,MCbnC,IAyCegD,EAzCQ,WACrB,IAAMC,EAAUC,cACV5F,EAAS6F,qBAAW3F,GACpBI,EAAQwF,iBAAgC,MAE9CrB,qBAAU,WACHzE,GAEDM,EAAMyF,UAERzF,EAAMyF,QAAQ9D,UAAYjC,KAE3B,CAACA,EAAQM,IAEZ,IAAM0F,EAAOC,sBAAW,sBAAC,4BAAArE,EAAA,6DACjBsE,EAAOC,cADU,SAEFd,EAAQ,CAAEE,MAAO,SAAUW,SAFzB,eAKrBP,EAAQS,KAAR,WAAiBF,IALI,2CAOtB,IAEH,OACE,sBAAKpB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,kEAGA,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBAAQuB,QAASL,EAAMlB,UAAU,SAAjC,kBAGA,mBAAGA,UAAU,WAAb,qDAEF,uBAAOA,UAAU,QAAQwB,UAAQ,EAACC,OAAK,EAACC,UAAU,EAAOC,IAAKnG,WCzCjDoG,G,kBAInB,WAAYpB,GAAe,IAAD,gCAHlBqB,QAGkB,OAFlBrB,aAEkB,OAmB1BsB,iBAAmB,SAACrB,GAClB,EAAKD,QAAQsB,iBAAiBrB,IApBN,KAuB1BsB,6BAvB0B,sBAuBK,4BAAAjF,EAAA,yDACxB,EAAK+E,GADmB,iEAGT,EAAKA,GAAGG,cAHC,cAGvBC,EAHuB,gBAIvB,EAAKJ,GAAGK,oBAAoBD,GAJL,uBAKvB1B,EAAQ,CAAEE,MAAO,OAAQwB,MAAO,EAAKJ,GAAGM,mBALjB,2CAvBL,KA+B1BC,wBA/B0B,uCA+BA,WAAO3B,GAAP,SAAA3D,EAAA,yDACnB2D,EAAM4B,UADa,iEAElB9B,EAAQ,CAAEE,MAAO,YAAa4B,UAAW5B,EAAM4B,YAF7B,2CA/BA,2DAoC1BC,oCAAsC,WACpC,GAAK,EAAKT,GAAV,CAEA,IAAMU,EAAQ,EAAKV,GAAGW,mBAEtB,OAAQD,GACN,IAAK,SACL,IAAK,SACL,IAAK,eACH,EAAKE,QAGT,EAAKjC,QAAQ8B,oCAAoCC,KAhDzB,KAmD1BG,gCAAkC,WAChC,GAAK,EAAKb,GAAV,CAEA,IAAMU,EAAQ,EAAKV,GAAGc,eAEtB,OAAQJ,GACN,IAAK,SACH,EAAKE,QAGT,EAAKjC,QAAQkC,gCAAgCH,KA7DrB,KAuF1BK,WAvF0B,uCAuFb,WAAOC,GAAP,eAAA/F,EAAA,6DACXiD,QAAQE,IAAI,OAAQ4C,GAEpB,EAAKhB,GAAK,EAAKiB,uBAHJ,SAKL,EAAKjB,GAAGkB,qBAAqB,IAAIC,sBAAsBH,EAAIZ,QALtD,cAQX,EAAKzB,QAAQtF,OACV+H,YAEAnE,SAAQ,SAACC,GAAD,OAAW,EAAK8C,GAAG7C,SAASD,EAAO,EAAKyB,QAAQtF,WAXhD,SAaU,EAAK2G,GAAGqB,eAblB,cAaLC,EAbK,iBAcL,EAAKtB,GAAGK,oBAAoB,IAAIc,sBAAsBG,IAdjD,yBAeL5C,EAAQ,CAAEE,MAAO,SAAU0C,OAAQ,EAAKtB,GAAGM,mBAftC,4CAvFa,2DAyG1BiB,aAzG0B,uCAyGX,WAAOP,GAAP,SAAA/F,EAAA,yDACbiD,QAAQE,IAAI,SAAU4C,GAEjB,EAAKhB,GAHG,iEAKP,EAAKA,GAAGkB,qBAAqB,IAAIC,sBAAsBH,EAAIM,SALpD,2CAzGW,2DAiH1BE,gBAjH0B,uCAiHR,WAAOR,GAAP,SAAA/F,EAAA,yDAChBiD,QAAQE,IAAI,YAAa4C,GAEpB,EAAKhB,GAHM,iEAKV,EAAKA,GAAGyB,gBAAgBT,EAAIR,WALlB,2CAjHQ,sDACxBrG,KAAK6F,GAAK,KACV7F,KAAKwE,QAAUA,EAEfL,EAAOE,GAAG,OAAQrE,KAAK4G,YACvBzC,EAAOE,GAAG,SAAUrE,KAAKoH,cACzBjD,EAAOE,GAAG,YAAarE,KAAKqH,iB,wCAG9B,WAAQ,IAAD,OACLrH,KAAK6F,GAAK7F,KAAK8G,uBAGf9G,KAAKwE,QAAQtF,OACV+H,YAEAnE,SAAQ,SAACC,GAAD,OAAW,EAAK8C,GAAG7C,SAASD,EAAO,EAAKyB,QAAQtF,a,kCAgD7D,WACE,IAAMqI,EAAI,IAAIC,kBAAkB,CAC9BC,WAAY,CACV,CACEC,KAAM,mCAgBZ,OAXAH,EAAEI,oBAAsB3H,KAAK+F,6BAC7BwB,EAAEK,QAAU5H,KAAK8F,iBACjByB,EAAEM,eAAiB7H,KAAKoG,wBACxBmB,EAAEO,2BAA6B9H,KAAKsG,oCACpCiB,EAAEQ,uBAAyB/H,KAAK0G,gCAGhCa,EAAES,cAAgB,SAACvD,GAAD,OAAWV,QAAQE,IAAI,gBAAiBQ,IAC1D8C,EAAEU,0BAA4B,kBAC5BlE,QAAQE,IAAI,8BAEPsD,I,mBAqCT,WACOvH,KAAK6F,KAEV7F,KAAK6F,GAAG+B,QAAU,KAElB5H,KAAK6F,GAAGmC,cAAgB,KACxBhI,KAAK6F,GAAGgC,eAAiB,KACzB7H,KAAK6F,GAAGiC,2BAA6B,KACrC9H,KAAK6F,GAAGkC,uBAAyB,KACjC/H,KAAK6F,GAAGoC,0BAA4B,KACpCjI,KAAK6F,GAAG8B,oBAAsB,KAE9B3H,KAAK6F,GAAGY,QACRzG,KAAK6F,GAAK,U,MCpIRqC,OAA+BC,IAApBlF,UAAUmF,MAE3B,SAASA,IACP,IAAMC,EAAY,CAChBC,MAAO,gBACPC,KAAM,+BACNC,IAAKvI,SAASwI,SAASC,MAGzBzF,UAAUmF,MAAMC,GAAWxE,KAAKE,QAAQE,KAAKH,MAAMC,QAAQV,OAO7D,IA6FesF,EA7FQ,WACrB,IAAMC,EAASC,cACThE,EAAUC,cACV5F,EAAS6F,qBAAW3F,GAEpB0J,EAAS9D,iBAAgC,MACzC+D,EAAQ/D,iBAAgC,MAExCgE,EAAa7D,uBAAY,WACzB2D,EAAO7D,SACT6D,EAAO7D,QAAQgE,gBAAgB,eAEhC,IAkEH,OAhEAtF,qBAAU,WAAM,4CAOd,8BAAA7C,EAAA,6DACQoI,EAAS,IAAItD,EAAO,CACxB1G,OAAQA,EACR4G,iBAAkB,SAACrB,GAGjBV,QAAQE,IAAI6E,EAAO7D,QAASR,GACxBqE,EAAO7D,UACT6D,EAAO7D,QAAQ9D,UAAYsD,EAAM0E,QAAQ,KAG7C7C,oCAAqC,SAACC,GACpC,OAAQA,GACN,IAAK,SACL,IAAK,SACL,IAAK,eACHyC,IACA,MACF,QACEjF,QAAQE,IAAIsC,KAIlBG,gCAAiC,SAACH,GAChC,OAAQA,GACN,IAAK,SACHyC,IACA,MACF,QACEjF,QAAQE,IAAIsC,OA7BtB,SAmCuBhC,EAAQ,CAAEE,MAAO,OAAQW,KAAMwD,EAAOQ,KAnC7D,sBAqCIvE,EAAQS,KAAK,KArCjB,SAwC6Bf,EAAQ,CACjCE,MAAO,eACPW,KAAMwD,EAAOQ,KA1CjB,UAwCQC,EAxCR,OA6CEtF,QAAQE,IAAI,eAAgBoF,GAIvBA,EAAaC,OAjDpB,mDAmDEJ,EAAOK,OAnDT,6CAPc,sBACTrK,GACA6J,EAAM9D,UAGX8D,EAAM9D,QAAQ9D,UAAYjC,EALZ,0CA6DdsK,GAAO1F,MAAMC,QAAQV,UACpB,CAACnE,EAAQ6J,IAGV,sBAAK/E,UAAU,YAAf,UACE,sBAAKA,UAAU,SAAf,UACE,uBAAO2B,IAAKmD,EAAQtD,UAAQ,EAACE,UAAU,EAAO1B,UAAU,WACxD,uBAAO2B,IAAKoD,EAAOvD,UAAQ,EAACE,UAAU,EAAOD,OAAK,EAACzB,UAAU,aAE9DkE,GACC,wBAAQ3C,QAAS6C,EAAOpE,UAAU,SAAlC,uBC/FOyF,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9F,MAAK,YAAkD,IAA/C+F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCGdO,IAASrJ,OACP,cAAC,IAAMsJ,WAAP,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC,EAAD,eAMVnK,SAASoK,eAAe,SAM1BZ,K","file":"static/js/main.5ecc1225.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport default createContext<MediaStream | null>(null);\n","import React from \"react\";\n\nimport Context from \"./Context\";\n\ninterface StreamProviderProps {\n  stream: MediaStream | null;\n}\n\nexport const Provider: React.FC<StreamProviderProps> = ({\n  stream,\n  children,\n}) => {\n  return <Context.Provider value={stream}>{children}</Context.Provider>;\n};\n","import {\n  Clock,\n  Scene,\n  WebGLRenderer,\n  PerspectiveCamera,\n  PlaneGeometry,\n  ShaderMaterial,\n  VideoTexture,\n  DoubleSide,\n  Mesh,\n} from \"three\";\n\n// @ts-ignore\nimport vertexShader from \"./shaders/vertex.glsl\";\n// @ts-ignore\nimport fragmentShader from \"./shaders/fragment.glsl\";\n\nconst CONSTRAINTS_VIDEO_WIDTH = 640;\nconst CONSTRAINTS_VIDEO_HEIGHT = 480;\nconst CONSTRAINTS_VIDEO_FRAME_RATE = 25;\n\nexport default class Renderer {\n  private canvas: HTMLCanvasElement;\n  private video: HTMLVideoElement;\n  private readonly width: number = CONSTRAINTS_VIDEO_WIDTH;\n  private readonly height: number = CONSTRAINTS_VIDEO_HEIGHT;\n  private scene: Scene;\n  private renderer: WebGLRenderer;\n  private clock: Clock;\n  private stream: MediaStream | undefined;\n  private camera: PerspectiveCamera;\n  private material: ShaderMaterial | undefined;\n  \n  constructor() {\n    this.video = document.createElement(\"video\");\n    this.video.autoplay = true;\n    \n    this.canvas = document.createElement(\"canvas\");\n    this.canvas.width = this.width;\n    this.canvas.height = this.height;\n    \n    this.scene = new Scene();\n    \n    this.camera = new PerspectiveCamera(45, this.width / this.height, 0.1, 100);\n    this.camera.position.z = 1;\n    \n    this.renderer = new WebGLRenderer({\n      canvas: this.canvas,\n      antialias: true,\n      alpha: true,\n    });\n    \n    this.clock = new Clock();\n    \n    this.render = this.render.bind(this);\n  }\n  \n  async getStream(): Promise<MediaStream> {\n    const media = await this.getUserMedia();\n    \n    const audioTracks = media.getAudioTracks();\n    \n    this.video.srcObject = new MediaStream(media.getVideoTracks());\n    \n    await Promise.race([\n      new Promise((_, reject) =>\n        setTimeout(reject, 2000, new Error('\"loadedmetadata\" timeout error'))\n      ),\n      new Promise((resolve) => {\n        this.video.onloadeddata = resolve;\n      }),\n    ]);\n    \n    const geometry = new PlaneGeometry(1, 0.75, 32, 32);\n    this.material = new ShaderMaterial({\n      vertexShader,\n      fragmentShader,\n      uniforms: {\n        uTime: { value: 0.0 },\n        uTexture: { value: new VideoTexture(this.video) },\n      },\n      side: DoubleSide,\n    });\n    const mesh = new Mesh(geometry, this.material);\n    this.scene.add(mesh);\n    \n    requestAnimationFrame(this.render);\n    \n    // @ts-ignore\n    this.stream = this.canvas.captureStream(CONSTRAINTS_VIDEO_FRAME_RATE);\n    \n    audioTracks.forEach((track) => {\n      // @ts-ignore\n      this.stream.addTrack(track);\n    });\n    \n    // @ts-ignore\n    return this.stream;\n  }\n  \n  getUserMedia(): Promise<MediaStream> {\n    if (navigator.mediaDevices) {\n      return navigator.mediaDevices.getUserMedia({\n        video: {\n          width: CONSTRAINTS_VIDEO_WIDTH,\n          height: CONSTRAINTS_VIDEO_HEIGHT,\n          frameRate: CONSTRAINTS_VIDEO_FRAME_RATE,\n        },\n        audio: true,\n      });\n    }\n    \n    const error = new Error(\n      \"No navigator.mediaDevices, make sure you are on HTTPS/localhost\"\n    );\n    error.name = \"NoMediaDevices\";\n    return Promise.reject(error);\n  }\n  \n  render() {\n    requestAnimationFrame(this.render);\n    // @ts-ignore\n    this.material.uniforms.uTime.value = this.clock.getElapsedTime();\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n","export default \"precision mediump float;\\n\\nvarying vec2 vUv;\\nvarying float vWave;\\nuniform float uTime;\\n\\n//\\n// Description : Array and textureless GLSL 2D/3D/4D simplex\\n//               noise functions.\\n//      Author : Ian McEwan, Ashima Arts.\\n//  Maintainer : ijm\\n//     Lastmod : 20110822 (ijm)\\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\\n//               Distributed under the MIT License. See LICENSE file.\\n//               https://github.com/ashima/webgl-noise\\n//\\n\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 mod289(vec4 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec4 permute(vec4 x) {\\n  return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nvec4 taylorInvSqrt(vec4 r)\\n{\\n  return 1.79284291400159 - 0.85373472095314 * r;\\n}\\n\\nfloat snoise(vec3 v) {\\n  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;\\n  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);\\n\\n  // First corner\\n  vec3 i  = floor(v + dot(v, C.yyy) );\\n  vec3 x0 =   v - i + dot(i, C.xxx) ;\\n\\n  // Other corners\\n  vec3 g = step(x0.yzx, x0.xyz);\\n  vec3 l = 1.0 - g;\\n  vec3 i1 = min( g.xyz, l.zxy );\\n  vec3 i2 = max( g.xyz, l.zxy );\\n\\n  //   x0 = x0 - 0.0 + 0.0 * C.xxx;\\n  //   x1 = x0 - i1  + 1.0 * C.xxx;\\n  //   x2 = x0 - i2  + 2.0 * C.xxx;\\n  //   x3 = x0 - 1.0 + 3.0 * C.xxx;\\n  vec3 x1 = x0 - i1 + C.xxx;\\n  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\\n  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y\\n\\n  // Permutations\\n  i = mod289(i);\\n  vec4 p = permute( permute( permute(\\n  i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\\n  + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\\n  + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\\n\\n  // Gradients: 7x7 points over a square, mapped onto an octahedron.\\n  // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\\n  float n_ = 0.142857142857; // 1.0/7.0\\n  vec3  ns = n_ * D.wyz - D.xzx;\\n\\n  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)\\n\\n  vec4 x_ = floor(j * ns.z);\\n  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)\\n\\n  vec4 x = x_ *ns.x + ns.yyyy;\\n  vec4 y = y_ *ns.x + ns.yyyy;\\n  vec4 h = 1.0 - abs(x) - abs(y);\\n\\n  vec4 b0 = vec4( x.xy, y.xy );\\n  vec4 b1 = vec4( x.zw, y.zw );\\n\\n  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\\n  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\\n  vec4 s0 = floor(b0)*2.0 + 1.0;\\n  vec4 s1 = floor(b1)*2.0 + 1.0;\\n  vec4 sh = -step(h, vec4(0.0));\\n\\n  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\\n  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\\n\\n  vec3 p0 = vec3(a0.xy,h.x);\\n  vec3 p1 = vec3(a0.zw,h.y);\\n  vec3 p2 = vec3(a1.xy,h.z);\\n  vec3 p3 = vec3(a1.zw,h.w);\\n\\n  // Normalise gradients\\n  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\\n  p0 *= norm.x;\\n  p1 *= norm.y;\\n  p2 *= norm.z;\\n  p3 *= norm.w;\\n\\n  // Mix final noise value\\n  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\\n  m = m * m;\\n  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),\\n  dot(p2,x2), dot(p3,x3) ) );\\n}\\n\\nvoid main() {\\n  vUv = uv;\\n\\n  vec3 pos = position;\\n  float noiseFreq = 3.5;\\n  float noiseAmp = 0.15;\\n  vec3 noisePos = vec3(pos.x * noiseFreq + uTime, pos.y, pos.z);\\n  pos.z += snoise(noisePos) * noiseAmp;\\n  vWave = pos.z;\\n\\n  gl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.);\\n}\\n\";","export default \"precision mediump float;\\n\\nvarying vec2 vUv;\\nvarying float vWave;\\nuniform sampler2D uTexture;\\n\\nvoid main() {\\n    float wave = vWave * 0.25;\\n    float r = texture2D(uTexture, vUv).r;\\n    float g = texture2D(uTexture, vUv).g;\\n    float b = texture2D(uTexture, vUv + wave).b;\\n    vec3 texture = vec3(r, g, b);\\n    gl_FragColor = vec4(texture, 1.);\\n}\\n\";","import React, { useEffect, useState } from \"react\";\nimport { Renderer, Provider } from \"./stream\";\n\nimport \"./App.css\";\n\nconst App: React.FC = ({ children }) => {\n  const [stream, setStream] = useState<MediaStream | null>(null);\n\n  useEffect(() => {\n    const renderer = new Renderer();\n    renderer.getStream().then(setStream).catch(console.error);\n  }, []);\n\n  return (\n    <Provider stream={stream}>\n      <main className=\"app\">{children}</main>\n    </Provider>\n  );\n};\n\nexport default App;\n","import { io } from \"socket.io-client\";\n\nconsole.log(\"ws server:\", process.env.REACT_APP_SOCKET_IO_SERVER);\nconst socket = io(process.env.REACT_APP_SOCKET_IO_SERVER as string);\n\nsocket.on(\"connect\", () => console.log(\"connect\"));\nsocket.on(\"reconnect\", () => console.log(\"reconnect\"));\nsocket.on(\"disconnect\", () => console.log(\"disconnect\"));\nsocket.on(\"connect_error\", (err) => console.log(\"connect_error\", err));\n\nexport default socket;\n\nexport function request(options: {\n  [x: string]: any;\n  event: string;\n  offer?: RTCSessionDescription | null;\n  candidate?: RTCIceCandidate;\n  answer?: RTCSessionDescription | null;\n}) {\n  const { event, ...parameters } = options;\n  return new Promise((resolve) => {\n    socket.emit(event, parameters, resolve);\n  });\n}\n","import React, { useCallback, useContext, useEffect, useRef } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport { Context } from \"./stream\";\n\nimport \"./Home.css\";\nimport { request } from \"./webrtc/socket\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Home: React.FC = () => {\n  const history = useHistory();\n  const stream = useContext(Context);\n  const video = useRef<HTMLVideoElement | null>(null);\n\n  useEffect(() => {\n    if (!stream) return;\n\n    if (video.current) {\n      // @ts-ignore\n      video.current.srcObject = stream;\n    }\n  }, [stream, video]);\n\n  const host = useCallback(async () => {\n    const room = nanoid();\n    const status = await request({ event: \"create\", room });\n\n    if (status) {\n      history.push(`/${room}`);\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">\n        The most secure video conferencing powered by WebRTC\n      </h1>\n      <div className=\"content\">\n        <div className=\"buttons\">\n          <button onClick={host} className=\"button\">\n            Host\n          </button>\n          <p className=\"subtitle\">Host your meeting and share the link</p>\n        </div>\n        <video className=\"video\" autoPlay muted controls={false} ref={video} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import socket, { request } from \"./socket\";\n\nexport default class WebRTC {\n  private pc: RTCPeerConnection | null;\n  private options: any;\n\n  constructor(options: any) {\n    this.pc = null;\n    this.options = options;\n\n    socket.on(\"call\", this.handleCall);\n    socket.on(\"answer\", this.handleAnswer);\n    socket.on(\"candidate\", this.handleCandidate);\n  }\n\n  call() {\n    this.pc = this.createPeerConnection();\n\n    // @ts-ignore\n    this.options.stream\n      .getTracks()\n      // @ts-ignore\n      .forEach((track) => this.pc.addTrack(track, this.options.stream));\n  }\n\n  handleTrackEvent = (event: RTCTrackEvent) => {\n    this.options.handleTrackEvent(event);\n  };\n\n  handleNegotiationNeededEvent = async () => {\n    if (!this.pc) return;\n\n    const offer = await this.pc.createOffer();\n    await this.pc.setLocalDescription(offer);\n    await request({ event: \"call\", offer: this.pc.localDescription });\n  };\n\n  handleICECandidateEvent = async (event: RTCPeerConnectionIceEvent) => {\n    if (!event.candidate) return;\n    await request({ event: \"candidate\", candidate: event.candidate });\n  };\n\n  handleICEConnectionStateChangeEvent = () => {\n    if (!this.pc) return;\n\n    const state = this.pc.iceConnectionState;\n\n    switch (state) {\n      case \"closed\":\n      case \"failed\":\n      case \"disconnected\":\n        this.close();\n    }\n\n    this.options.handleICEConnectionStateChangeEvent(state);\n  };\n\n  handleSignalingStateChangeEvent = () => {\n    if (!this.pc) return;\n\n    const state = this.pc.signalingState;\n\n    switch (state) {\n      case \"closed\":\n        this.close();\n    }\n\n    this.options.handleSignalingStateChangeEvent(state);\n  };\n\n  createPeerConnection() {\n    const c = new RTCPeerConnection({\n      iceServers: [\n        {\n          urls: \"stun:stun.l.google.com:19302\",\n        },\n      ],\n    });\n\n    c.onnegotiationneeded = this.handleNegotiationNeededEvent;\n    c.ontrack = this.handleTrackEvent;\n    c.onicecandidate = this.handleICECandidateEvent;\n    c.oniceconnectionstatechange = this.handleICEConnectionStateChangeEvent;\n    c.onsignalingstatechange = this.handleSignalingStateChangeEvent;\n\n    // @ts-ignore\n    c.onremovetrack = (event) => console.log(\"onremovetrack\", event);\n    c.onicegatheringstatechange = () =>\n      console.log(\"onicegatheringstatechange\");\n\n    return c;\n  }\n\n  handleCall = async (msg: { offer: RTCSessionDescriptionInit }) => {\n    console.log(\"call\", msg);\n\n    this.pc = this.createPeerConnection();\n\n    await this.pc.setRemoteDescription(new RTCSessionDescription(msg.offer));\n\n    // @ts-ignore\n    this.options.stream\n      .getTracks()\n      // @ts-ignore\n      .forEach((track) => this.pc.addTrack(track, this.options.stream));\n\n    const answer = await this.pc.createAnswer();\n    await this.pc.setLocalDescription(new RTCSessionDescription(answer));\n    await request({ event: \"answer\", answer: this.pc.localDescription });\n  };\n\n  handleAnswer = async (msg: { answer: RTCSessionDescriptionInit }) => {\n    console.log(\"answer\", msg);\n\n    if (!this.pc) return;\n\n    await this.pc.setRemoteDescription(new RTCSessionDescription(msg.answer));\n  };\n\n  handleCandidate = async (msg: { candidate: RTCIceCandidate }) => {\n    console.log(\"candidate\", msg);\n\n    if (!this.pc) return;\n\n    await this.pc.addIceCandidate(msg.candidate);\n  };\n\n  close() {\n    if (!this.pc) return;\n\n    this.pc.ontrack = null;\n    // @ts-ignore\n    this.pc.onremovetrack = null;\n    this.pc.onicecandidate = null;\n    this.pc.oniceconnectionstatechange = null;\n    this.pc.onsignalingstatechange = null;\n    this.pc.onicegatheringstatechange = null;\n    this.pc.onnegotiationneeded = null;\n\n    this.pc.close();\n    this.pc = null;\n  }\n}\n","import React, { useCallback, useContext, useEffect, useRef } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport \"./Room.css\";\nimport { Context } from \"./stream\";\nimport WebRTC from \"./webrtc\";\nimport { request } from \"./webrtc/socket\";\n\nconst canShare = navigator.share !== undefined;\n\nfunction share() {\n  const shareData = {\n    title: \"Working title\",\n    text: \"Join me in video conference!\",\n    url: document.location.href,\n  };\n\n  navigator.share(shareData).then(console.log).catch(console.error);\n}\n\ninterface RoomParams {\n  id: string;\n}\n\nconst Room: React.FC = () => {\n  const params = useParams<RoomParams>();\n  const history = useHistory();\n  const stream = useContext(Context);\n\n  const remote = useRef<HTMLVideoElement | null>(null);\n  const local = useRef<HTMLVideoElement | null>(null);\n\n  const disconnect = useCallback(() => {\n    if (remote.current) {\n      remote.current.removeAttribute(\"srcObject\");\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!stream) return;\n    if (!local.current) return;\n\n    // @ts-ignore\n    local.current.srcObject = stream;\n\n    async function main() {\n      const webrtc = new WebRTC({\n        stream: stream,\n        handleTrackEvent: (event: {\n          streams: (MediaStream | MediaSource | Blob | null)[];\n        }) => {\n          console.log(remote.current, event);\n          if (remote.current) {\n            remote.current.srcObject = event.streams[0];\n          }\n        },\n        handleICEConnectionStateChangeEvent: (state: any) => {\n          switch (state) {\n            case \"closed\":\n            case \"failed\":\n            case \"disconnected\":\n              disconnect();\n              break;\n            default:\n              console.log(state);\n              break;\n          }\n        },\n        handleSignalingStateChangeEvent: (state: any) => {\n          switch (state) {\n            case \"closed\":\n              disconnect();\n              break;\n            default:\n              console.log(state);\n              break;\n          }\n        },\n      });\n\n      const status = await request({ event: \"join\", room: params.id });\n      if (!status) {\n        history.push(\"/\");\n      }\n\n      const participants = await request({\n        event: \"participants\",\n        room: params.id,\n      });\n\n      console.log(\"participants\", participants);\n\n      // we are alone here, wait for someone to call us\n      // @ts-ignore\n      if (!participants.length) return;\n\n      webrtc.call();\n    }\n\n    main().catch(console.error);\n  }, [stream, local]);\n\n  return (\n    <div className=\"container\">\n      <div className=\"videos\">\n        <video ref={remote} autoPlay controls={false} className=\"remote\" />\n        <video ref={local} autoPlay controls={false} muted className=\"local\" />\n      </div>\n      {canShare && (\n        <button onClick={share} className=\"button\">\n          Share\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default Room;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport App from './App';\nimport Home from './Home';\nimport Room from './Room';\n\nimport reportWebVitals from './reportWebVitals';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/:id\">\n            <Room />\n          </Route>\n        </Switch>\n      </Router>\n    </App>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}